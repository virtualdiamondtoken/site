{"version":3,"sources":["store.js","components/Text.js","diamonds/BackfaceMaterial.js","diamonds/RefractionMaterial.js","blocks.js","diamonds/Diamonds.js","components/CustomMaterial.js","components/Plane.js","index.js"],"names":["state","sections","pages","zoom","paragraphs","stripes","offset","color","height","diamonds","x","pos","Vector3","scale","factor","top","createRef","Text","children","size","left","right","bottom","opacity","layers","font","props","data","useLoader","FontLoader","geom","usePromise","Promise","res","TextBufferGeometry","curveSegments","onUpdate","useCallback","self","box","geometry","computeBoundingBox","boundingBox","getSize","position","y","ref","useRef","last","current","useFrame","shift","lerp","frustumCulled","attach","transparent","MultilineText","text","lineHeight","split","map","index","key","BackfaceMaterial","vertexShader","fragmentShader","side","BackSide","ShaderMaterial","RefractionMaterial","options","uniforms","envMap","value","backfaceMap","resolution","offsetContext","createContext","Block","useBlock","parentOffset","sectionHeight","undefined","curY","curTop","Provider","useThree","viewport","useContext","viewportWidth","width","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor","dummy","Object3D","Diamonds","gltf","GLTFLoader","useMemo","scene","center","gl","camera","clock","model","ratio","getPixelRatio","envFbo","WebGLRenderTarget","backfaceFbo","texture","backfaceMaterial","refractionMaterial","forEach","i","t","getElapsedTime","s","set","copy","length","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","autoClear","setRenderTarget","clearColor","render","clearDepth","material","args","__$","CustomMaterial","hasTexture","Color","this","extend","Plane","forwardRef","Startup","Paragraph","image","header","aspect","w","alignRight","pixelWidth","style","textAlign","tabIndex","Content","images","TextureLoader","minFilter","LinearFilter","Math","PI","className","ReactDOM","scrollArea","onScroll","e","target","scrollTop","useEffect","concurrent","pixelRatio","orthographic","fallback","Array","fill","_","id","href","document","getElementById"],"mappings":"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","file":"static/js/main.dfe2140c.chunk.js","sourcesContent":["import { createRef } from \"react\"\r\nimport { Vector3 } from \"three\"\r\n\r\nconst state = {\r\n  sections: 9,\r\n  pages: 2, /* used to be 8*/\r\n  zoom: 75,\r\n  paragraphs: [/*\r\n    {\r\n      offset: 1,\r\n      factor: 1.75,\r\n      header: \"Deflationary\",\r\n      image: \"/photo-1515036551567-bf1198cccc35.jpeg\",\r\n      aspect: 1.51,\r\n      text: \"1% of all transactions are sent to the burn address. That's possible because 500,000,000,000,000,000,000,000.00 💎 were sent to the burn address at launch. That represents half of the total supply of one septillion 💎. https://cchain.explorer.avax.network/tx/0xb58e780146c63ab265375ce53c5900d8e3c097921cf06b865046c681660ee801/token-transfers\"\r\n    },\r\n    {\r\n      offset: 2,\r\n      factor: 2.0,\r\n      header: \"Reflective transactions\",\r\n      image: \"/ph3.jpg\",\r\n      aspect: 1.5,\r\n      text:\r\n        \"1% of all transactions are redistributed to the all the holders. If the transaction fails, try it with higher slippage.\"\r\n    },\r\n    {\r\n      offset: 3,\r\n      factor: 2.25,\r\n      header: \"Locked liquidity\",\r\n      image: \"/ph1.jpg\",\r\n      aspect: 1.5037,\r\n      text:\r\n        \"The remaining 💎 supply and liquidity were locked in a smart contract at https://team.finance for at least 4 years, starting in 2021. The contract does not have an owner. Tokens locked at https://team.finance/view-coin/0x4aBBc3275f8419685657C2DD69b8ca2e26F23F8.\"\r\n    },\r\n    {\r\n      offset: 4,\r\n      factor: 2.0,\r\n      header: \"Transactions become liquidity\",\r\n      image: \"/photo-1519608487953-e999c86e7455.jpg\",\r\n      aspect: 0.665,\r\n      text:\r\n        \"3% of all transactions are converted into liquidity.\"\r\n    },\r\n    {\r\n      offset: 5,\r\n      factor: 1.75,\r\n      header: \"Fixed supply\",\r\n      image: \"/photo-1533577116850-9cc66cad8a9b.jpg\",\r\n      aspect: 1.55,\r\n      text:\r\n        \"It is impossible to mint new diamond tokens 💎.\"\r\n    },\r\n    { offset: 7, factor: 1.05, header: \"Available on Pangolin Exchange\", image: \"/photo-1548191265-cc70d3d45ba1.jpg\", aspect: 1.77, text: \"💎 0x4aBBc3275f8419685657C2DD69b8ca2e26F23F8E 💎\" }\r\n  */ ],\r\n  stripes: [\r\n    { offset: 0, color: \"#000\", height: 13 },\r\n    { offset: 6.3, color: \"#000\", height: 20 }\r\n  ],\r\n  diamonds: [\r\n  { x: 0, offset: 0.15, pos: new Vector3(), scale: 0.6, factor: 1.8 },\r\n    /*  { x: 2, offset: 1.1, pos: new Vector3(), scale: 0.8, factor: 2.1 },\r\n    { x: -5, offset: 2, pos: new Vector3(), scale: 0.8, factor: 2.5 },\r\n    { x: 0, offset: 3.2, pos: new Vector3(), scale: 0.8, factor: 1.75 },\r\n    { x: 0, offset: 4, pos: new Vector3(), scale: 0.8, factor: 2.5 },\r\n    { x: 2, offset: 5.5, pos: new Vector3(), scale: 1.25, factor: 0.85 },\r\n    { x: -5, offset: 7, pos: new Vector3(), scale: 0.8, factor: 2 },*/\r\n    { x: 0, offset: 8, pos: new Vector3(), scale: 1.5, factor: 6 }\r\n  ],\r\n  top: createRef()\r\n}\r\n\r\nexport default state\r\n","import { FontLoader, Vector3, TextBufferGeometry } from \"three\"\r\nimport React, { useCallback, useRef } from \"react\"\r\nimport { useLoader, useFrame } from \"react-three-fiber\"\r\nimport usePromise from \"react-promise-suspense\"\r\nimport lerp from \"lerp\"\r\nimport state from \"../store\"\r\n\r\nfunction Text({ children, size = 1, left, right, top, bottom, color = \"white\", opacity = 1, height = 0.01, layers = 0, font = \"/MOONGET_Heavy.blob\", ...props }) {\r\n  const data = useLoader(FontLoader, font)\r\n  const geom = usePromise(() => new Promise(res => res(new TextBufferGeometry(children, { font: data, size: 1, height, curveSegments: 32 }))), [children])\r\n  const onUpdate = useCallback(\r\n    self => {\r\n      const box = new Vector3()\r\n      self.geometry.computeBoundingBox()\r\n      self.geometry.boundingBox.getSize(box)\r\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2\r\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2\r\n    },\r\n    [left, right, top, bottom]\r\n  )\r\n\r\n  const ref = useRef()\r\n  let last = state.top.current\r\n  useFrame(() => {\r\n    ref.current.shift = lerp(ref.current.shift, (state.top.current - last) / 100, 0.1)\r\n    last = state.top.current\r\n  })\r\n\r\n  return (\r\n    <group {...props} scale={[size, size, 0.1]}>\r\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\r\n        <customMaterial ref={ref} attach=\"material\" color={color} transparent opacity={opacity} />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nconst MultilineText = ({ text, size = 1, lineHeight = 1, position = [0, 0, 0], ...props }) =>\r\n  text.split(\"\\n\").map((text, index) => <Text key={index} size={size} {...props} position={[position[0], position[1] - index * lineHeight, position[2]]} children={text} />)\r\n\r\nexport { Text, MultilineText }\r\n","import { ShaderMaterial, BackSide } from \"three\"\r\n\r\nexport default class BackfaceMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      vertexShader: `varying vec3 worldNormal;\r\n      void main() {\r\n        vec4 transformedNormal = vec4(normal, 0.);\r\n        vec4 transformedPosition = vec4(position, 1.0);\r\n        #ifdef USE_INSTANCING\r\n          transformedNormal = instanceMatrix * transformedNormal;\r\n          transformedPosition = instanceMatrix * transformedPosition;\r\n        #endif\r\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\r\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\r\n      }`,\r\n      fragmentShader: `varying vec3 worldNormal;\r\n      void main() {\r\n        gl_FragColor = vec4(worldNormal, 1.0);\r\n      }`,\r\n      side: BackSide\r\n    })\r\n  }\r\n}\r\n","import { ShaderMaterial } from \"three\"\r\n\r\nexport default class RefractionMaterial extends ShaderMaterial {\r\n  constructor(options) {\r\n    super({\r\n      vertexShader: `varying vec3 worldNormal;\r\n      varying vec3 viewDirection;\r\n      void main() {\r\n        vec4 transformedNormal = vec4(normal, 0.);\r\n        vec4 transformedPosition = vec4(position, 1.0);\r\n        #ifdef USE_INSTANCING\r\n          transformedNormal = instanceMatrix * transformedNormal;\r\n          transformedPosition = instanceMatrix * transformedPosition;\r\n        #endif\r\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\r\n        viewDirection = normalize((modelMatrix * vec4( position, 1.0)).xyz - cameraPosition);;\r\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\r\n      }`,\r\n      fragmentShader: `uniform sampler2D envMap;\r\n      uniform sampler2D backfaceMap;\r\n      uniform vec2 resolution;\r\n      varying vec3 worldNormal;\r\n      varying vec3 viewDirection;\r\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\r\n        return pow(1.05 + dot(viewDirection, worldNormal), 100.0);\r\n      }\r\n      void main() {\r\n        vec2 uv = gl_FragCoord.xy / resolution;\r\n        vec3 normal = worldNormal * (1.0 - 0.7) - texture2D(backfaceMap, uv).rgb * 0.7;\r\n        vec4 color = texture2D(envMap, uv += refract(viewDirection, normal, 1.0/1.5).xy);\r\n        //gl_FragColor = vec4(mix(color.rgb, vec3(0.15), fresnelFunc(viewDirection, normal)), 1.0);\r\n        gl_FragColor = vec4(mix(color.rgb, vec3(0.4), fresnelFunc(viewDirection, normal)), 1.0);\r\n      }`,\r\n      uniforms: {\r\n        envMap: { value: options.envMap },\r\n        backfaceMap: { value: options.backfaceMap },\r\n        resolution: { value: options.resolution }\r\n      }\r\n    })\r\n  }\r\n}\r\n","import React, { createContext, useRef, useContext } from \"react\"\r\nimport { useFrame, useThree } from \"react-three-fiber\"\r\nimport lerp from \"lerp\"\r\nimport state from \"./store\"\r\n\r\nconst offsetContext = createContext(0)\r\n\r\nfunction Block({ children, offset, factor, ...props }) {\r\n  const { offset: parentOffset, sectionHeight } = useBlock()\r\n  const ref = useRef()\r\n  offset = offset !== undefined ? offset : parentOffset\r\n  useFrame(() => {\r\n    const curY = ref.current.position.y\r\n    const curTop = state.top.current\r\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\r\n  })\r\n  return (\r\n    <offsetContext.Provider value={offset}>\r\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\r\n        <group ref={ref}>{children}</group>\r\n      </group>\r\n    </offsetContext.Provider>\r\n  )\r\n}\r\n\r\nfunction useBlock() {\r\n  const { sections, pages, zoom } = state\r\n  const { size, viewport } = useThree()\r\n  const offset = useContext(offsetContext)\r\n  const viewportWidth = viewport.width\r\n  const viewportHeight = viewport.height\r\n  const canvasWidth = viewportWidth / zoom\r\n  const canvasHeight = viewportHeight / zoom\r\n  const mobile = size.width < 700\r\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\r\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\r\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\r\n  const offsetFactor = (offset + 1.0) / sections\r\n  return {\r\n    viewport,\r\n    offset,\r\n    viewportWidth,\r\n    viewportHeight,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    mobile,\r\n    margin,\r\n    contentMaxWidth,\r\n    sectionHeight,\r\n    offsetFactor\r\n  }\r\n}\r\n\r\nexport { Block, useBlock }\r\n","import { WebGLRenderTarget, Object3D } from \"three\"\r\nimport React, { useRef, useMemo } from \"react\"\r\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport lerp from \"lerp\"\r\nimport BackfaceMaterial from \"./BackfaceMaterial\"\r\nimport RefractionMaterial from \"./RefractionMaterial\"\r\nimport { useBlock } from \"../blocks\"\r\nimport state from \"../store\"\r\n\r\nconst dummy = new Object3D()\r\nexport default function Diamonds() {\r\n  const gltf = useLoader(GLTFLoader, \"/diamond.glb\")\r\n  useMemo(() => gltf.scene.children[0].geometry.center(), [])\r\n\r\n  const { size, gl, scene, camera, clock } = useThree()\r\n  const { contentMaxWidth, sectionHeight, mobile } = useBlock()\r\n  const model = useRef()\r\n  const ratio = gl.getPixelRatio()\r\n\r\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\r\n    const envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\r\n    const backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\r\n    const backfaceMaterial = new BackfaceMaterial()\r\n    const refractionMaterial = new RefractionMaterial({\r\n      envMap: envFbo.texture,\r\n      backfaceMap: backfaceFbo.texture,\r\n      resolution: [size.width * ratio, size.height * ratio]\r\n    })\r\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\r\n  }, [size, ratio])\r\n\r\n  useFrame(() => {\r\n    state.diamonds.forEach((data, i) => {\r\n      const t = clock.getElapsedTime() / 2\r\n      const { x, offset, scale, factor } = data\r\n      const s = (contentMaxWidth / 35) * scale\r\n      data.pos.set(mobile ? 0 : x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), 0)\r\n      dummy.position.copy(data.pos)\r\n      if (i === state.diamonds.length - 1) dummy.rotation.set(0, t, 0)\r\n      else dummy.rotation.set(t, t, t)\r\n      dummy.scale.set(s, s, s)\r\n      dummy.updateMatrix()\r\n      model.current.setMatrixAt(i, dummy.matrix)\r\n      model.current.instanceMatrix.needsUpdate = true\r\n    })\r\n\r\n    gl.autoClear = false\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(envFbo)\r\n    gl.clearColor()\r\n    gl.render(scene, camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = backfaceMaterial\r\n    gl.setRenderTarget(backfaceFbo)\r\n    gl.clearDepth()\r\n    gl.render(scene, camera)\r\n    camera.layers.set(0)\r\n    gl.setRenderTarget(null)\r\n    gl.render(scene, camera)\r\n    gl.clearDepth()\r\n    camera.layers.set(1)\r\n    model.current.material = refractionMaterial\r\n    gl.render(scene, camera)\r\n  }, 1)\r\n\r\n  return (\r\n    <instancedMesh ref={model} layers={1} args={[null, null, state.diamonds.length]} position={[0, 0, 50]}>\r\n      <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\r\n    </instancedMesh>\r\n  )\r\n}\r\n","import { ShaderMaterial, Color } from \"three\"\r\nimport { extend } from \"react-three-fiber\"\r\n\r\nclass CustomMaterial extends ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      vertexShader: `uniform float scale;\r\n      uniform float shift;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        vec3 pos = position;\r\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 1.5) * 0.125);\r\n        vUv = uv;\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\r\n      }`,\r\n      fragmentShader: `uniform sampler2D texture;\r\n      uniform float hasTexture;\r\n      uniform float shift;\r\n      uniform float scale;\r\n      uniform vec3 color;\r\n      uniform float opacity;\r\n      varying vec2 vUv;\r\n      void main() {\r\n        float angle = 1.55;\r\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\r\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\r\n        vec4 cr = texture2D(texture, p + offset);\r\n        vec4 cga = texture2D(texture, p);\r\n        vec4 cb = texture2D(texture, p - offset);\r\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\r\n        else gl_FragColor = vec4(color, opacity);\r\n      }`,\r\n      uniforms: {\r\n        texture: { value: null },\r\n        hasTexture: { value: 0 },\r\n        scale: { value: 0 },\r\n        shift: { value: 0 },\r\n        opacity: { value: 1 },\r\n        color: { value: new Color(\"white\") }\r\n      }\r\n    })\r\n  }\r\n\r\n  set scale(value) {\r\n    this.uniforms.scale.value = value\r\n  }\r\n\r\n  get scale() {\r\n    return this.uniforms.scale.value\r\n  }\r\n\r\n  set shift(value) {\r\n    this.uniforms.shift.value = value\r\n  }\r\n\r\n  get shift() {\r\n    return this.uniforms.shift.value\r\n  }\r\n\r\n  set map(value) {\r\n    this.uniforms.hasTexture.value = !!value\r\n    this.uniforms.texture.value = value\r\n  }\r\n\r\n  get map() {\r\n    return this.uniforms.texture.value\r\n  }\r\n\r\n  get color() {\r\n    return this.uniforms.color.value\r\n  }\r\n\r\n  get opacity() {\r\n    return this.uniforms.opacity.value\r\n  }\r\n\r\n  set opacity(value) {\r\n    if (this.uniforms) this.uniforms.opacity.value = value\r\n  }\r\n}\r\n\r\nextend({ CustomMaterial })\r\n","import React, { forwardRef, useRef } from \"react\"\r\nimport { useFrame } from \"react-three-fiber\"\r\nimport lerp from \"lerp\"\r\nimport \"./CustomMaterial\"\r\nimport { useBlock } from \"../blocks\"\r\nimport state from \"../store\"\r\n\r\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\r\n  const { viewportHeight, offsetFactor } = useBlock()\r\n  const material = useRef()\r\n  let last = state.top.current\r\n  useFrame(() => {\r\n    const { pages, top } = state\r\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\r\n    material.current.shift = lerp(material.current.shift, (top.current - last) / shift, 0.1)\r\n    last = top.current\r\n  })\r\n  return (\r\n    <mesh ref={ref} {...props}>\r\n      <planeBufferGeometry attach=\"geometry\" args={args} />\r\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} transparent opacity={opacity} />\r\n    </mesh>\r\n  )\r\n})\r\n\r\nexport default Plane\r\n","import ReactDOM from \"react-dom\"\r\nimport React, { Suspense, useEffect, useRef, useMemo } from \"react\"\r\nimport { Canvas, Dom, useLoader, useFrame } from \"react-three-fiber\"\r\nimport { TextureLoader, LinearFilter } from \"three\"\r\nimport lerp from \"lerp\"\r\nimport { Text, MultilineText } from \"./components/Text\"\r\nimport Diamonds from \"./diamonds/Diamonds\"\r\nimport Plane from \"./components/Plane\"\r\nimport { Block, useBlock } from \"./blocks\"\r\nimport state from \"./store\"\r\nimport \"./styles.css\"\r\n\r\nfunction Startup() {\r\n  const ref = useRef()\r\n  useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\r\n  return <Plane ref={ref} color=\"#0e0e0f\" position={[0, 0, 200]} scale={[100, 100, 1]} />\r\n}\r\n\r\nfunction Paragraph({ image, index, offset, factor, header, aspect, text }) {\r\n  const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock()\r\n  const size = aspect < 1 && !mobile ? 0.65 : 1\r\n  const alignRight = (canvasWidth - w * size - margin) / 2\r\n  const pixelWidth = w * state.zoom * size\r\n  const left = !(index % 2)\r\n  const color = index % 2 ? \"#D40749\" : \"#2FE8C3\"\r\n  return (\r\n    <Block factor={factor} offset={offset}>\r\n      <group position={[left ? -alignRight : alignRight, 0, 0]}>\r\n        <Plane map={image} args={[1, 1, 32, 32]} shift={75} size={size} aspect={aspect} scale={[w * size, (w * size) / aspect, 1]} frustumCulled={false} />\r\n        <Dom\r\n          style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: left ? \"left\" : \"right\" }}\r\n          position={[left || mobile ? (-w * size) / 2 : 0, (-w * size) / 2 / aspect - 0.4, 1]}>\r\n          <div tabIndex={index}>{text}</div>\r\n        </Dom>\r\n        <Text left={left} right={!left} size={w * 0.04} color={color} top position={[((left ? -w : w) * size) / 2, (w * size) / aspect / 2 + 0.5, -1]}>\r\n          {header}\r\n        </Text>\r\n        <Block factor={0.2}>\r\n          <Text opacity={0.5} size={w * 0.1} color=\"#1A1E2A\" position={[((left ? w : -w) / 2) * size, (w * size) / aspect / 1.5, -10]}>\r\n            {\"0\" + (index + 1)}\r\n          </Text>\r\n        </Block>\r\n      </group>\r\n    </Block>\r\n  )\r\n}\r\n\r\nfunction Content() {\r\n  const images = useLoader(\r\n    TextureLoader,\r\n    state.paragraphs.map(({ image }) => image)\r\n  )\r\n  useMemo(() => images.forEach(texture => (texture.minFilter = LinearFilter)), [images])\r\n  const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock()\r\n  return (\r\n    <>\r\n      <Block factor={1} offset={0}>\r\n        <Block factor={1.2}>\r\n          <Text left size={w * 0.08} position={[-w / 3.2, 0.5, -1]} color=\"#d40749\">\r\n            DIAMOND\r\n          </Text>\r\n        </Block>\r\n        <Block factor={1.0}>\r\n          <Dom position={[-w / 3.2, -w * 0.08 + 0.25, -1]}>In digital form.{mobile ? <br /> : \" \"}The diamond token has arrived.  <br />With exclusive NFTs.</Dom>\r\n        </Block>\r\n      </Block>\r\n      <Block factor={1.2} offset={5.7}>\r\n        <MultilineText top left size={w * 0.15} lineHeight={w / 5} position={[-w / 2, 0, -1]} color=\"#2fe8c3\" text={\"diamond\\nerc-20\\ntoken\"} />\r\n      </Block>\r\n      {state.paragraphs.map((props, index) => (\r\n        <Paragraph key={index} index={index} {...props} image={images[index]} />\r\n      ))}\r\n      {state.stripes.map(({ offset, color, height }, index) => (\r\n        <Block key={index} factor={-1.5} offset={offset}>\r\n          <Plane args={[50, height, 32, 32]} shift={-4} color={color} rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]} />\r\n        </Block>\r\n      ))}\r\n      <Block factor={1.25} offset={8}>\r\n        <Dom className=\"bottom-left\" position={[-canvasWidth / 2, -canvasHeight / 2, 0]}>\r\n          Diamond token 💎 is a deflationary ERC20 token (Safemoon fork) with locked liquidity on the Avalanche blockchain.\r\n        </Dom>\r\n      </Block>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const scrollArea = useRef()\r\n  const onScroll = e => (state.top.current = e.target.scrollTop)\r\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\r\n  return (\r\n    <>\r\n      <Canvas className=\"canvas\" concurrent pixelRatio={1} orthographic camera={{ zoom: state.zoom, position: [0, 0, 500] }}>\r\n        <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\r\n          <Content />\r\n          <Diamonds />\r\n          <Startup />\r\n        </Suspense>\r\n      </Canvas>\r\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\r\n        {new Array(state.sections).fill().map((_, index) => (\r\n          <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} />\r\n        ))}\r\n      </div>\r\n      <div className=\"frame\">\r\n        <h1 className=\"frame__title\">Diamond token 💎 on Avalanche {/*0x4aBBc3275f8419685657C2DD69b8ca2e26F23F8E*/}</h1>\r\n        <div className=\"frame__links\">\r\n          <a className=\"frame__link\" target=\"_blank\" href=\"https://app.diamondtoken.world\">\r\n          💎 NFTs \r\n          </a>\r\n          <a className=\"frame__link\" target=\"_blank\" href=\"https://app.pangolin.exchange/#/swap?inputCurrency=0x4abbc3275f8419685657c2dd69b8ca2e26f23f8e\">\r\n          💎 on Pangolin \r\n          </a>\r\n          <a className=\"frame__link\" target=\"_blank\" href=\"https://t.me/oficialDiamondtokenworld\">\r\n          ✉️ Telegram\r\n          </a>\r\n          <a className=\"frame__link\" target=\"_blank\" href=\"https://team.finance/view-coin/0x4aBBc3275f8419685657C2DD69b8ca2e26F23F8\">\r\n          🔒 Locked liquidity\r\n          </a>\r\n        </div>\r\n      {/**\r\n        <div className=\"frame__nav\">\r\n          <a className=\"frame__link\" href=\"#00\" children=\"intro\" />\r\n          <a className=\"frame__link\" href=\"#01\" children=\"01\" />\r\n          <a className=\"frame__link\" href=\"#02\" children=\"02\" />\r\n          <a className=\"frame__link\" href=\"#03\" children=\"03\" />\r\n          <a className=\"frame__link\" href=\"#04\" children=\"04\" />\r\n          <a className=\"frame__link\" href=\"#05\" children=\"05\" />\r\n          <a className=\"frame__link\" href=\"#07\" children=\"06\" />\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}